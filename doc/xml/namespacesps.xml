<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="namespacesps" kind="namespace">
    <compoundname>sps</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacesps_1a5ec8f80252d9d984138f014c822d27d0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T sps::dist_point_to_point</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;a, const point_t&lt; T &gt; &amp;b)</argsstring>
        <name>dist_point_to_point</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Distance from point to point</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="89" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="89" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a49b7bc999932466978a16485e1c6a98b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T sps::dot</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;a, const point_t&lt; T &gt; &amp;b)</argsstring>
        <name>dot</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Dot product of vectors or points</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="103" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="103" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a634cb0a93cc6f57c45c79f7df04c8752" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>point_t&lt; T &gt;</type>
        <definition>point_t&lt;T&gt; sps::operator-</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;a, const point_t&lt; T &gt; &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Subtract two points</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a - b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="117" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="117" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1abcd3fabeb60a10d9ad05fc027c789e9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>point_t&lt; T &gt;</type>
        <definition>point_t&lt;T&gt; sps::operator+</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;a, const point_t&lt; T &gt; &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add two points</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a + b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="136" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="136" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a04c7b1f1585fda60325b43c35937ee96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>point_t&lt; T &gt;</type>
        <definition>point_t&lt;T&gt; sps::cross</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;a, const point_t&lt; T &gt; &amp;b)</argsstring>
        <name>cross</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Cross product of two points or vectors</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>a x b </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="154" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="154" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a22175b6c56edce28e060aaddb0443215" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>point_t&lt; T &gt;</type>
        <definition>point_t&lt;T&gt; sps::operator*</definition>
        <argsstring>(const T &amp;a, const point_t&lt; T &gt; &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const T &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Scalar multiplication of a vector or point</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>point</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="172" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="172" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1ac8e58e03b1ed250e4dd83774401fb670" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T sps::norm</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;a)</argsstring>
        <name>norm</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Norm of a vector or point</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>|a| </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="189" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="189" bodyend="192"/>
        <references refid="namespacesps_1a49b7bc999932466978a16485e1c6a98b" compoundref="smath_8hpp" startline="103" endline="106">dot</references>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a55c6fe1c1fdf3c5a3e7b354dae205840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T sps::dist_to_line</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;point, const point_t&lt; T &gt; &amp;pointOnLine, const point_t&lt; T &gt; &amp;direction)</argsstring>
        <name>dist_to_line</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>pointOnLine</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>direction</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Distance from point to line</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointOnLine</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="204" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="204" bodyend="208"/>
        <references refid="namespacesps_1ac8e58e03b1ed250e4dd83774401fb670" compoundref="smath_8hpp" startline="189" endline="192">norm</references>
        <references refid="namespacesps_1a04c7b1f1585fda60325b43c35937ee96" compoundref="smath_8hpp" startline="154" endline="161">cross</references>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a6d00662f3287276d877ae3e1e10b9c6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T</type>
        <definition>T sps::sgn_dist_to_plane</definition>
        <argsstring>(const point_t&lt; T &gt; &amp;point, const point_t&lt; T &gt; &amp;pointOnPlane, const point_t&lt; T &gt; &amp;unitNormal)</argsstring>
        <name>sgn_dist_to_plane</name>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>pointOnPlane</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>unitNormal</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Signed distance from point to plane</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pointOnPlane</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>unitNormal</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="220" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="220" bodyend="224"/>
        <references refid="namespacesps_1a49b7bc999932466978a16485e1c6a98b" compoundref="smath_8hpp" startline="103" endline="106">dot</references>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a4cbe6332a0c07b3bb2e80bb8048d6f9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>sps::point_t&lt; T &gt;</type>
        <definition>sps::point_t&lt;T&gt; sps::clamp_vector</definition>
        <argsstring>(const sps::point_t&lt; T &gt; &amp;point, const sps::bbox_t&lt; T &gt; &amp;box)</argsstring>
        <name>clamp_vector</name>
        <param>
          <type>const sps::point_t&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const sps::bbox_t&lt; T &gt; &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Clamp a vector inside a box</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="235" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="235" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a49f2545f74f9a6cf30e04d428badaf27" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>sps::point_t&lt; T &gt;</type>
        <definition>sps::point_t&lt;T&gt; sps::nearest_point_on_bbox</definition>
        <argsstring>(const sps::point_t&lt; T &gt; &amp;point, const sps::bbox_t&lt; T &gt; &amp;box)</argsstring>
        <name>nearest_point_on_bbox</name>
        <param>
          <type>const sps::point_t&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const sps::bbox_t&lt; T &gt; &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest point on a box (from a point)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="253" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="253" bodyend="256"/>
        <references refid="namespacesps_1a4cbe6332a0c07b3bb2e80bb8048d6f9e" compoundref="smath_8hpp" startline="235" endline="242">clamp_vector</references>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a5ba962916e1ba5c3114e45f153d80081" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>sps::point_t&lt; T &gt;</type>
        <definition>sps::point_t&lt;T&gt; sps::farthest_point_on_bbox</definition>
        <argsstring>(const sps::point_t&lt; T &gt; &amp;point, const sps::bbox_t&lt; T &gt; &amp;box)</argsstring>
        <name>farthest_point_on_bbox</name>
        <param>
          <type>const sps::point_t&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <param>
          <type>const sps::bbox_t&lt; T &gt; &amp;</type>
          <declname>box</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Farthest point on a box (from a point)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>box</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="267" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="267" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a00bcbe34e177c2a5ac0ec59f89998db2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void sps::dists_most_distant_and_closest</definition>
        <argsstring>(const sps::bbox_t&lt; T &gt; &amp;box0, const sps::bbox_t&lt; T &gt; &amp;box1, T *distNear, T *distFar)</argsstring>
        <name>dists_most_distant_and_closest</name>
        <param>
          <type>const sps::bbox_t&lt; T &gt; &amp;</type>
          <declname>box0</declname>
        </param>
        <param>
          <type>const sps::bbox_t&lt; T &gt; &amp;</type>
          <declname>box1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>distNear</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>distFar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="284" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="284" bodyend="334"/>
        <references refid="namespacesps_1a49f2545f74f9a6cf30e04d428badaf27" compoundref="smath_8hpp" startline="253" endline="256">nearest_point_on_bbox</references>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1af6fa4d5ae05cae25226c8f79d864a722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void SPS_EXPORT</type>
        <definition>void SPS_EXPORT sps::basis_vectors</definition>
        <argsstring>(sps::point_t&lt; T &gt; &amp;output, const sps::euler_t&lt; T &gt; &amp;euler, size_t index)</argsstring>
        <name>basis_vectors</name>
        <param>
          <type>sps::point_t&lt; T &gt; &amp;</type>
          <declname>output</declname>
        </param>
        <param>
          <type>const sps::euler_t&lt; T &gt; &amp;</type>
          <declname>euler</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for returning the basis vector for a given coordinate system defined using 3 Euler angles according to the the z-x-z&apos; convention.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>output</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>euler</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="353" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a1f2f198c4ef4cd43756c6d07dfcbd790" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void SPS_EXPORT</type>
        <definition>void SPS_EXPORT sps::basis_vectors</definition>
        <argsstring>(T *vec0, T *vec1, T *vec2, const sps::euler_t&lt; T &gt; &amp;euler)</argsstring>
        <name>basis_vectors</name>
        <param>
          <type>T *</type>
          <declname>vec0</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type>const sps::euler_t&lt; T &gt; &amp;</type>
          <declname>euler</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Function for returning the basis vector for a given coordinate system defined using 3 Euler angles according to the the z-x-z&apos; convention. Using SIMD for packed singles</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vec0</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec1</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vec2</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>euler</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="366" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacesps_1a1f6bfb41fd1c17ffbe559cb6c9838487" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; sps::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;out, const point_t&lt; T &gt; &amp;point)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>out</declname>
        </param>
        <param>
          <type>const point_t&lt; T &gt; &amp;</type>
          <declname>point</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Operator for printing points to a stream</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>out</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>point</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/sps/smath.hpp" line="377" column="1" bodyfile="/home/jmh/github/sofus/sps/smath.hpp" bodystart="377" bodyend="381"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jmh/github/sofus/fnm/fnm.hpp" line="40" column="1"/>
  </compounddef>
</doxygen>
