<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="namespacegl" kind="namespace">
    <compoundname>gl</compoundname>
    <innerclass refid="structgl_1_1GLNode" prot="public">gl::GLNode</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespacegl_1af3f8ce6ef90f2939af71d4dcd7f7300b" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double JZ[_BESSELJZERO_LUT_TABLE_SIZE]</definition>
        <argsstring>[_BESSELJZERO_LUT_TABLE_SIZE]</argsstring>
        <name>JZ</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/bessel_lut.hpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegl_1a3f45d860f72d97fe1d1fb1e5fa4749ff" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double J1[_BESSELJ_1_SQUARED_LUT_TABLE_SIZE]</definition>
        <argsstring>[_BESSELJ_1_SQUARED_LUT_TABLE_SIZE]</argsstring>
        <name>J1</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/bessel_lut.hpp" line="17" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegl_1af4c9c0a0468b7e8a4a075d536afd6f65" prot="public" static="no" mutable="no">
        <type>const double *</type>
        <definition>const double* weights[_GL_LUT_TABLE_SIZE]</definition>
        <argsstring>[_GL_LUT_TABLE_SIZE]</argsstring>
        <name>weights</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/gl_lut.hpp" line="16" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="namespacegl_1a8fd2242d1215dfb011d971d994f6aea5" prot="public" static="no" mutable="no">
        <type>const double *</type>
        <definition>const double* abcissas[_GL_LUT_TABLE_SIZE]</definition>
        <argsstring>[_GL_LUT_TABLE_SIZE]</argsstring>
        <name>abcissas</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/gl_lut.hpp" line="17" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacegl_1a8dfc38fe28db34846c60086d6ecf508c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double GL_EXPORT</type>
        <definition>double GL_EXPORT gl::GLQuad</definition>
        <argsstring>(size_t n, double(*f)(double, void *), void *data, double a, double b)</argsstring>
        <name>GLQuad</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>double(*)(double, void *)</type>
          <declname>f</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gauss-Legendre quadrature using an n-point rule.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>Quadrature order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>Integrand </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to user-defined data which will be passed to <computeroutput>f</computeroutput> every time it is called (as second parameter). </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>Lower integration limit </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>Upper integration limit</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/gl.hpp" line="134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegl_1aa2fa29b0a69c2eeb23b4e0b9613e7fc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgl_1_1GLNode" kindref="compound">gl::GLNode</ref> GL_EXPORT</type>
        <definition>gl::GLNode GL_EXPORT gl::GL</definition>
        <argsstring>(size_t l, size_t k)</argsstring>
        <name>GL</name>
        <param>
          <type>size_t</type>
          <declname>l</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Purpose:</para><para>GL computes the kth GL pair of an n-point rule. It uses look-up tables for the n &lt; 101.</para><para>Licensing:</para><para>This code is distributed under the BSD license.</para><para>Modified:</para><para>22 December 2015</para><para>Author:</para><para>Ignace Bogaert</para><para>Reference:</para><para>Ignace Bogaert, Iteration-free computation of Gauss-Legendre quadrature nodes and weights, SIAM Journal on Scientific Computing, Volume 36, Number 3, 2014, pages A1008-1026.</para><para>The only function that needs to be public</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of points in the given rule </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the point to be returned</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The location and weight of the point </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/gl.hpp" line="168" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegl_1a7f251958ee6d2c65e37b0f9e61a9fe30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structgl_1_1GLNode" kindref="compound">gl::GLNode</ref> GL_EXPORT</type>
        <definition>gl::GLNode GL_EXPORT gl::GLS</definition>
        <argsstring>(size_t n, size_t k)</argsstring>
        <name>GLS</name>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>GLS computes the kth GL pair of an n-point rule using the formula rather than look-up tables.</para><para>Reference:</para><para>Ignace Bogaert, Iteration-free computation of Gauss-Legendre quadrature nodes and weights, SIAM Journal on Scientific Computing, Volume 36, Number 3, 2014, pages A1008-1026.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>n</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of points in the given rule </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the point to be returned</para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/gl.hpp" line="186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegl_1a516dc08710fc7a9d7f455203bcd9a358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double GL_EXPORT</type>
        <definition>double GL_EXPORT gl::besseljzero</definition>
        <argsstring>(int k)</argsstring>
        <name>besseljzero</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function computes the k&apos;th zero of the BesselJ(0,x)</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/gl.hpp" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="namespacegl_1a8a87a797409c579a3658648f68de3d8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double GL_EXPORT</type>
        <definition>double GL_EXPORT gl::besselj1squared</definition>
        <argsstring>(int k)</argsstring>
        <name>besselj1squared</name>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This function computes the square of BesselJ(1, BesselZero(0,k))</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/jmh/github/sofus/gl/gl.hpp" line="204" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Gauss-Legendre interfaces and implementations. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/jmh/github/sofus/gl/bessel_lut.hpp" line="15" column="1"/>
  </compounddef>
</doxygen>
